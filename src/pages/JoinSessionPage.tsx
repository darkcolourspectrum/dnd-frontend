import React, { useState, useEffect } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';
import { getSessionById, joinSession } from '../api/gameSessions';
import { GameSession } from '../types/gameTypes';

const JoinSessionPage: React.FC = () => {
  const { sessionId } = useParams<{ sessionId: string }>();
  const { token, userId } = useAuth();
  const navigate = useNavigate();
  
  const [session, setSession] = useState<GameSession | null>(null);
  const [loading, setLoading] = useState(true);
  const [joining, setJoining] = useState(false);
  const [error, setError] = useState('');

  useEffect(() => {
    loadData();
  }, [sessionId, token]);

  const loadData = async () => {
    if (!sessionId || !token) return;
    
    try {
      setLoading(true);
      const sessionData = await getSessionById(sessionId, token);
      
      if (!sessionData) {
        setError('–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
      }
      
      setSession(sessionData);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∂–µ –ª–∏ –º—ã –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏
      const existingPlayer = sessionData.players?.find(p => p.user_id === userId);
      if (existingPlayer) {
        // –£–∂–µ –≤ —Å–µ—Å—Å–∏–∏, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–æ–±–±–∏
        navigate(`/lobby/${sessionId}`);
        return;
      }
      
    } catch (err) {
      console.error('Error loading data:', err);
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    } finally {
      setLoading(false);
    }
  };

  const handleJoin = async () => {
    if (!sessionId || !token) return;
    
    try {
      setJoining(true);
      // –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º—Å—è –ë–ï–ó –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ - –≤—ã–±–µ—Ä–µ–º –µ–≥–æ –≤ –ª–æ–±–±–∏
      await joinSession({
        sessionId,
        characterId: 1, // –í—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –∏—Å–ø—Ä–∞–≤–∏–º –≤ API
        token
      });
      
      // –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ª–æ–±–±–∏
      navigate(`/lobby/${sessionId}`);
      
    } catch (err) {
      console.error('Join error:', err);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —Å–µ—Å—Å–∏–∏');
    } finally {
      setJoining(false);
    }
  };

  if (loading) {
    return (
      <div className="page-container">
        <div className="content-wrapper">
          <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Å—Å–∏–∏...</div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="page-container">
        <div className="content-wrapper">
          <div className="card card-medium">
            <div className="error">{error}</div>
            <div style={{ textAlign: 'center', marginTop: '20px' }}>
              <button onClick={() => navigate('/')} className="btn btn-primary">
                –ù–∞ –≥–ª–∞–≤–Ω—É—é
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (!session) {
    return (
      <div className="page-container">
        <div className="content-wrapper">
          <div className="error">–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</div>
        </div>
      </div>
    );
  }

  return (
    <div className="page-container">
      <div className="content-wrapper">
        <div className="card card-large">
          <h2>üéÆ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ —Å–µ—Å—Å–∏–∏</h2>
          
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏ */}
          <div style={{
            background: 'rgba(255, 255, 255, 0.1)',
            padding: '20px',
            borderRadius: '12px',
            marginBottom: '30px',
            border: '1px solid rgba(255, 255, 255, 0.2)'
          }}>
            <h3 style={{ color: '#ffd700', marginBottom: '15px' }}>
              üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏
            </h3>
            <div style={{ 
              display: 'grid',
              gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
              gap: '15px'
            }}>
              <div>
                <strong style={{ color: '#4facfe' }}>ID —Å–µ—Å—Å–∏–∏:</strong>
                <div>{session.id}</div>
              </div>
              <div>
                <strong style={{ color: '#56ab2f' }}>–°—Ç–∞—Ç—É—Å:</strong>
                <div>{session.status === 'waiting' ? '‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤' : 'üéØ –ê–∫—Ç–∏–≤–Ω–∞—è'}</div>
              </div>
              <div>
                <strong style={{ color: '#ff6b6b' }}>–ò–≥—Ä–æ–∫–∏:</strong>
                <div>{session.players?.length || 0} / {session.max_players}</div>
              </div>
            </div>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ */}
          <div>
            <h3 style={{ color: '#ffd700', marginBottom: '20px' }}>
              –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ
            </h3>
            
            <div style={{
              padding: '30px',
              background: 'rgba(255, 255, 255, 0.05)',
              borderRadius: '12px',
              border: '1px solid rgba(255, 255, 255, 0.2)',
              textAlign: 'center'
            }}>
              <div style={{ fontSize: '3rem', marginBottom: '20px' }}>üé≤</div>
              <h4 style={{ color: '#4facfe', marginBottom: '15px' }}>
                –ì–æ—Ç–æ–≤—ã –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—é?
              </h4>
              <p style={{ 
                color: 'rgba(255, 255, 255, 0.8)',
                marginBottom: '25px',
                lineHeight: '1.6'
              }}>
                –í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –∏–≥—Ä–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ <strong style={{ color: '#ffd700' }}>{session.id}</strong>.<br/>
                –ü–æ—Å–ª–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –ª–æ–±–±–∏ –∏–≥—Ä—ã.
              </p>
              
              {/* –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è */}
              <div style={{
                background: 'rgba(255, 215, 0, 0.1)',
                padding: '15px',
                borderRadius: '8px',
                marginBottom: '25px',
                border: '1px solid rgba(255, 215, 0, 0.3)'
              }}>
                <h5 style={{ color: '#ffd700', marginBottom: '10px' }}>
                  –ß—Ç–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è:
                </h5>
                <ul style={{ 
                  textAlign: 'left',
                  color: 'rgba(255, 255, 255, 0.8)',
                  margin: 0,
                  paddingLeft: '20px'
                }}>
                  <li>–ò–º–µ—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</li>
                  <li>–î–æ–∂–¥–∞—Ç—å—Å—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤</li>
                  <li>–°–ª–µ–¥–æ–≤–∞—Ç—å —É–∫–∞–∑–∞–Ω–∏—è–º Game Master</li>
                </ul>
              </div>

              {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
              <div style={{ 
                display: 'flex', 
                gap: '15px', 
                justifyContent: 'center',
                marginTop: '30px'
              }}>
                <button
                  onClick={() => navigate('/')}
                  className="btn btn-secondary"
                >
                  –ù–∞–∑–∞–¥
                </button>
                
                <button
                  onClick={handleJoin}
                  disabled={joining}
                  className={`btn btn-success btn-large ${joining ? 'btn-disabled' : ''}`}
                >
                  {joining ? '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...' : '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ'}
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default JoinSessionPage;